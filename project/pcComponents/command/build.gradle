// DroidMate, an automated execution generator for Android apps.
// Copyright (C) 2012-2018. Saarland University
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
//
// Current Maintainers:
// Nataniel Borges Jr. <nataniel dot borges at cispa dot saarland>
// Jenny Hotzkow <jenny dot hotzkow at cispa dot saarland>
//
// Former Maintainers:
// Konrad Jamrozik <jamrozik at st dot cs dot uni-saarland dot de>
//
// web: www.droidmate.org

import java.nio.file.Files
import java.nio.file.Paths

apply plugin: 'project-report' // http://www.gradle.org/docs/current/userguide/project_reports_plugin.html
apply plugin: 'application'

mainClassName = "org.droidmate.frontend.DroidmateFrontend"

// Run by ':project:pcComponents:command:runApp'
(tasks.run as JavaExec).configure {

	assert sourceSets.main.runtimeClasspath == classpath

	workingDir rootDir
	java.nio.file.Path argsFile = Paths.get("$rootDir/args.txt")
	if (Files.exists(argsFile))
	{
		List<String> appArgs = argsFile.text.readLines().first().split(" ") as List<String>
		args appArgs
	}
}

jar {
	manifest {
		attributes 'Main-Class': mainClassName
	}
}

dependOnJunit(project)

dependWithTest([project, ":project:pcComponents:core", "kotlin"])

dependencies {

	implementation("com.github.natanieljr:konrads_utilities:$utilities_version") {
		exclude group: "org.slf4j", module: "slf4j-simple"
	}
	compile 'com.natpryce:konfig:1.6.6.0'  // configuration library

	// Workaround for: 'gradlew :p:command:test' fails when reporter tests are runApp from command line.
	// It works when runApp from IntelliJ or when runApp with 'gradlew :p:reporter:test'
	testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"

	compile project(":project:pcComponents:tools:apk-inliner")
	compile project(":project:pcComponents:tools:androcov")
}

apply from: file("test.gradle")

apply from: project(":project:pcComponents").file("debug.gradle")
